Centralized chatroom, running on QoS2 (To ensure delivery exactly once)

Clients use async capabilities in lieu of threading?  Or maybe just use threads, since the throughput isn't going to be
all that high?

client class
    Feeds outgoing and incoming messages into a FIFO queue, which is then used to display the messages to the screen

message class
    Message container
    Has:
        message id
        timestamp
        payload (The actual message)
    coverts bytes to JSON, then JSON to a dictionary, and from there to the message itself

Queue:
    FIFO threaded queue.  Subscription validates all messages and puts them into the queue, to be consumed by Display

Display classes:
    Fetches messages from queue, displays them somehow (Be that on a CLI or a graphical screen, or what have you)

Subscription:
    Subscribes to a given topic, turns the fetched messages into Messages, and adds valid ones to the Queue

Publisher classes:
    Takes user input and sends it to the broker.